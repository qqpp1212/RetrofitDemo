1. http 知识点：
   目标：了解消息的结构：请求和响应是什么样的结构？消息什么样的呢？
   1. 消息结构：一次请求和响应的流程和结构：消息行，消息头，消息体
   2. 重定向：302,并有一个新的Url，客户端接收到之后会自动的进行重新请求。
2. OkHttp：
    1. 添加依赖
    2. 使用：重要的概念：Call模型
        开始：写在一起的，拆分
    3. 功能点：拦截器，主要帮我们拦截请求和响应的信息
    4. OkHttp是java库，不考虑UI，所以CallBack里面，是后台线程
        拿到Response之后，怎么更新UI呢？
        1. 我们去封装，Handler
        2. 使用别人封装好的，Volley，Retrofit

3. Retrofit：今天的重点内容：要求：一定要掌握
   基于Okhttp 进行的封装的，重大的改变：使用注解来帮我们构建接口请求
   1. 添加依赖
   2. 使用

   1. 注解
   2. baseUrl
   3. Call<泛型>  泛型到底是啥？应该填入什么？最后得到的数据类型

4. 重点讲解的内容：
    1. baseUrl：在接口构建的时候，传入的接口地址是不完整的相对地址，会将BaseUrl进行拼接
        如果是完整的，不进行拼接

    2. 注解：@GET @POST @Body
            @Path,@Query,@Field

    3. Call<最终得到的数据结构>
       网络请求：JSON字符串：解析：类、集合，方式：JSON，GSON。。。
                XML字符串：解析：类、集合，方式：sax，dom，pull。。。
                。。。。
                最终解析出来的：类/集合，最终得到的数据类型

       Retrofit强大的功能：转换器

       Json字符串---> 实体类、集合：通过Gson转换器
       1. 添加依赖
       2. 构建Retrofit的时候，添加上转换器
       3. 在Call模型里面添加上转换到的实体类或集合

5. Retrofit的POST请求
    在理一下思路：
    1. 初始化Retrofit
    2. 构建请求：使用注解来进行
    3. 执行请求
    4. 得到数据，处理数据



